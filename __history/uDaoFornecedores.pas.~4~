unit uDaofornecedores;

interface

uses udao, ufornecedores, uDM, DB, uDaoCidades, uDaoFormaPagamentos, SysUtils;

type
  Daofornecedores = class(dao)
  private

  protected
    umdm: TDM;
    umadaocidade: DaoCidades;
    umadaoformapagamento : DaoFormaPagamentos;
  public
    constructor CrieObj;
    destructor Destrua_se;
    function Salvar(pObj: TObject): string; override;
    function Carregar(pObj: TObject): string; override;
    function Excluir(pObj: TObject): string; override;
    function Pesquisar(pChave: string): string; override;
    procedure setDM(pDM: TDM);
    function getds: Tdatasource;
    procedure setdaocidade(pObj: TObject);
    procedure setdaoformapagamento (pObj : TObject);
  end;

implementation

{ Daofornecedores }

function Daofornecedores.Carregar(pObj: TObject): string;
var
  mfornecedores: fornecedores;
begin
  mfornecedores := fornecedores(pObj);
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetfornecedor.Active then
    umdm.dsetfornecedor.Open;
  mfornecedores.setCodigo(umdm.dsetfornecedorID_fornecedor.Value);
  mfornecedores.set.Value);
  mfornecedores.setdata_nasc(umdm.dsetfornecedorDATA_NASC.Value);
  mfornecedores.settpfornecedor(umdm.dsetfornecedorTPfornecedor.Value);
  mfornecedores.setsexo(umdm.dsetfornecedoresEXO.Value);
  mfornecedores.setnacionalidade(umdm.dsetfornecedorNACIONALIDADE.Value);
  mfornecedores.setcnpj_cpf(umdm.dsetfornecedorCNPJ_CPF.Value);
  mfornecedores.setinscest_rg(umdm.dsetfornecedorINSCEST_RG.Value);
  mfornecedores.setemail(umdm.dsetfornecedorEMAIL.Value);
  mfornecedores.setlimite(umdm.dsetfornecedorLIMITE.Value);
  mfornecedores.setcelular(umdm.dsetfornecedorCELULAR.Value);
  mfornecedores.settelefone(umdm.dsetfornecedorTELEFONE.Value);
  mfornecedores.setponto_ref(umdm.dsetfornecedorPONTO_REF.Value);
  mfornecedores.setendereco(umdm.dsetfornecedorENDERECO.Value);
  mfornecedores.setnumero(umdm.dsetfornecedorNUMERO.Value);
  mfornecedores.setbairro(umdm.dsetfornecedorBAIRRO.Value);
  mfornecedores.getumacidade.setCodigo(umdm.dsetfornecedorID_CIDADE.Value);
  mfornecedores.getumaformapagamento.setCodigo(umdm.dsetfornecedorID_FORMAPAGAMENTO.Value);
  mfornecedores.setstatus(umdm.dsetfornecedoresTATUS.Value);
  mfornecedores.setCadastro(umdm.dsetfornecedorDATA_CADASTRO.Value);
  mfornecedores.setUlt_Alt(umdm.dsetfornecedorULTIMA_ALTERACAO.Value);
end;

constructor Daofornecedores.CrieObj;
begin
  umadaocidade := DaoCidades.CrieObj;
  umadaoformapagamento := DaoFormaPagamentos.CrieObj;
end;

destructor Daofornecedores.Destrua_se;
begin
  umadaocidade.Destrua_se;
  umadaoformapagamento.Destrua_se;
end;

function Daofornecedores.Excluir(pObj: TObject): string;
begin
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetfornecedor.Active then
    umdm.dsetfornecedor.Open;
  umdm.dsetfornecedor.Delete;
  umdm.trans.Commit;
end;

function Daofornecedores.getds: Tdatasource;
begin
  result := umdm.dsfornecedor;
end;

function Daofornecedores.Pesquisar(pChave: string): string;
var
  mSQL: string;
begin
  if length(pChave) = 0 then
    mSQL := 'select * from fornecedor'
  else if ehnumero(pChave) then
    mSQL := 'select * from fornecedor where id_fornecedor =' + QuotedStr(pChave)
  else
    mSQL := 'select * from fornecedor where nome =' + QuotedStr(pChave);
  umdm.dsetfornecedor.Active := false;
  umdm.dsetfornecedor.SelectSQL.Text := mSQL;
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetfornecedor.Active then
    umdm.dsetfornecedor.Open;
  result := '';
end;

function Daofornecedores.Salvar(pObj: TObject): string;
var
  mfornecedores: fornecedores;
  mdata : Tdate;
begin
  mfornecedores := fornecedores(pObj);
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetfornecedor.Active then
    umdm.dsetfornecedor.Open;
  if mfornecedores.getcodigo = 0 then
    umdm.dsetfornecedor.Insert
  else
  begin
    mdata := now;
    umdm.dsetfornecedor.Edit;
  end;

  umdm.dsetfornecedorID_fornecedor.Value := mfornecedores.getcodigo;
  umdm.dsetfornecedorNOME.Value := mfornecedores.getnome;
  umdm.dsetfornecedorDATA_NASC.Value := mfornecedores.getdata_nasc;
  umdm.dsetfornecedorTPfornecedor.Value := mfornecedores.gettpfornecedor;
  umdm.dsetfornecedoresEXO.Value := mfornecedores.getsexo;
  umdm.dsetfornecedorNACIONALIDADE.Value := mfornecedores.getnacionalidade;
  umdm.dsetfornecedorCNPJ_CPF.Value := mfornecedores.getcnpj_cpf;
  umdm.dsetfornecedorINSCEST_RG.Value := mfornecedores.getinscest_rg;
  umdm.dsetfornecedorEMAIL.Value := mfornecedores.getemail;
  umdm.dsetfornecedorLIMITE.Value := mfornecedores.getlimite;
  umdm.dsetfornecedorCELULAR.Value := mfornecedores.getcelular;
  umdm.dsetfornecedorTELEFONE.Value := mfornecedores.gettelefone;
  umdm.dsetfornecedorPONTO_REF.Value := mfornecedores.getponto_ref;
  umdm.dsetfornecedorENDERECO.Value := mfornecedores.getendereco;
  umdm.dsetfornecedorNUMERO.Value := mfornecedores.getnumero;
  umdm.dsetfornecedorBAIRRO.Value := mfornecedores.getbairro;
  umdm.dsetfornecedorID_CIDADE.Value := mfornecedores.getumacidade.getcodigo;
  umdm.dsetfornecedorID_FORMAPAGAMENTO.Value := mfornecedores.getumaformapagamento.getCodigo;
  umdm.dsetfornecedoresTATUS.Value := mfornecedores.getstatus;
  umdm.dsetfornecedorULTIMA_ALTERACAO.Value := mdata;
  umdm.dsetfornecedorDATA_CADASTRO.Value := mfornecedores.getCadastro;
  umdm.dsetfornecedor.Post;
  umdm.trans.Commit;
end;

procedure Daofornecedores.setdaocidade(pObj: TObject);
begin
  umadaocidade := DaoCidades(pObj);
end;


procedure Daofornecedores.setdaoformapagamento(pObj: TObject);
begin
  umadaoformapagamento := DaoFormaPagamentos (pObj);
end;

procedure Daofornecedores.setDM(pDM: TDM);
begin
  umdm := pDM;
end;

end.
