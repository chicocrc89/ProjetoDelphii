unit uDaoFormaPagamentos;

interface

uses udao, uDM, DB, uformapagamentos, SysUtils, uDaoCondicoes;

type
  Daoformapagamentos = class(dao)
  private

  protected
    umadaocondicao : DaoCondicoes;
    umdm: TDM;
  public
    constructor CrieObj;
    destructor Destrua_se;
    function Salvar(pObj: TObject): string; override;
    function Carregar(pObj: TObject): string; override;
    function Excluir(pObj: TObject): string; override;
    function Pesquisar(pChave: string): string; override;
    procedure setDM(pDM: TDM);
    function getds: Tdatasource;
    procedure setdaocondicao(pObj: TObject);
  end;

implementation

{ Daoformapagamentos }

function Daoformapagamentos.Carregar(pObj: TObject): string;
var
  mformapagamentos: formapagamentos;
begin
  mformapagamentos := formapagamentos(pObj);
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetformapag.Active then
    umdm.dsetformapag.Open;
  mformapagamentos.setCodigo(umdm.dsetformapagID_FORMAPAGAMENTO.Value);
  mformapagamentos.setpagamento(umdm.dsetformapagPAGAMENTO.Value);


end;

constructor Daoformapagamentos.CrieObj;
begin
  self.umadaocondicao.CrieObj;
end;

destructor Daoformapagamentos.Destrua_se;
begin
  self.umadaocondicao.Destrua_se;
end;

function Daoformapagamentos.Excluir(pObj: TObject): string;
begin
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetformapag.Active then
    umdm.dsetformapag.Open;
  umdm.dsetformapag.Delete;
  umdm.trans.Commit;
end;

function Daoformapagamentos.getds: Tdatasource;
begin
  result := umdm.dsformapag;
end;

function Daoformapagamentos.Pesquisar(pChave: string): string;
var
  mSQL: string;
begin
  if length(pChave) = 0 then
    mSQL := 'select * from forma_pagamento order by pagamento'
  else if ehnumero(pChave) then
    mSQL := 'select * from forma_pagamento where id_formapagamento =' +
      QuotedStr(pChave)
  else
    mSQL := 'select * from forma_pagamento where pagamento =' +
      QuotedStr(pChave);
  umdm.dsetformapag.Active := false;
  umdm.dsetformapag.SelectSQL.Text := mSQL;
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetformapag.Active then
    umdm.dsetformapag.Open;
  result := '';
end;

function Daoformapagamentos.Salvar(pObj: TObject): string;
var
  mformapagamentos: formapagamentos;
begin
  mformapagamentos := formapagamentos(pObj);
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetformapag.Active then
    umdm.dsetformapag.Open;
  if mformapagamentos.getcodigo = 0 then
    umdm.dsetformapag.Insert
  else
    umdm.dsetformapag.Edit;
  umdm.dsetformapagID_FORMAPAGAMENTO.Value := mformapagamentos.getcodigo;
  umdm.dsetformapagPAGAMENTO.Value := mformapagamentos.getpagamento;
  umdm.dsetformapag.Post;
  umdm.trans.Commit;
end;

procedure Daoformapagamentos.setdaocondicao(pObj: TObject);
begin
  umadaocondicao := DaoCondicoes (pObj);
end;

procedure Daoformapagamentos.setDM(pDM: TDM);
begin
  umdm := pDM;
end;

end.
