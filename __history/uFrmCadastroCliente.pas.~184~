unit uFrmCadastroCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uFrmCadastro, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.ExtCtrls, uFrmconsultacidade, uFrmConsultaCondicao, uclientes,
  uControllerClientes, Vcl.ComCtrls;

type
  TFrmCadastroCliente = class(TFrmCadastro)
    Label3: TLabel;
    lbltipo: TLabel;
    lblinscestadual: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    edtnome: TEdit;
    edtcnpj_cpf: TEdit;
    edtinscestadual_rg: TEdit;
    edtendereco: TEdit;
    edtnumero: TEdit;
    edtbairro: TEdit;
    tpcliente: TRadioGroup;
    sexo: TRadioGroup;
    Label5: TLabel;
    Label1: TLabel;
    edtcelular: TEdit;
    Label2: TLabel;
    edttelefone: TEdit;
    Label4: TLabel;
    edtlimite: TEdit;
    Label6: TLabel;
    edtemail: TEdit;
    lblobrigatorio: TLabel;
    lblcnpj: TLabel;
    nacionalidade: TRadioGroup;
    Label21: TLabel;
    Label22: TLabel;
    status: TRadioGroup;
    Label19: TLabel;
    edtponto_ref: TEdit;
    lblcelular: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    Label17: TLabel;
    btnPesquisarcidade: TSpeedButton;
    edtcodcidade: TEdit;
    edtcidade: TEdit;
    edtddd: TEdit;
    Label24: TLabel;
    Label25: TLabel;
    btnpesqformapag: TSpeedButton;
    edtcodcondicao: TEdit;
    edtcondicao: TEdit;
    lbldocumento: TLabel;
    lblcpf: TLabel;
    lbltelefone: TLabel;
    Label7: TLabel;
    edtnasc: TDateTimePicker;
    procedure tpclienteClick(Sender: TObject);
    procedure nacionalidadeClick(Sender: TObject);
    procedure edtcodcidadeExit(Sender: TObject);
    procedure edtcodcondicaoExit(Sender: TObject);
    procedure btnPesquisarcidadeClick(Sender: TObject);
    procedure btnpesqformapagClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure edtcelularExit(Sender: TObject);
    procedure edttelefoneExit(Sender: TObject);
    procedure edtcnpj_cpfExit(Sender: TObject);
    procedure edtcnpj_cpfChange(Sender: TObject);
    procedure edtnascExit(Sender: TObject);
    procedure FormActivate(Sender: TObject);
  private
    { Private declarations }
  protected
    umfrmconsultacidade: TFrmConsultaCidade;
    umfrmconsultaCondicao: TFrmconsultaCondicao;
    umcliente: Clientes;
    umactrlcliente: ControllerClientes;
  public
    procedure ConhecaObj(pObj: TObject; pctrl: TObject); Override;
    procedure Salvar; Override;
    procedure Sair; Override;
    procedure CarregaEdt; Override;
    procedure LimpaEdt; Override;
    procedure BloqueiaEdt; Override;
    procedure DesbloqueiaEdt; Override;
    procedure SetFrmConsulta(pObj: TObject);
    procedure SetFrmConsultapagamento(pObj: TObject);
    function validacpf (num : string) : boolean;
    function ValidaCNPJ(num: string): boolean;
  end;

var
  FrmCadastroCliente: TFrmCadastroCliente;

implementation

{$R *.dfm}
{ TFrmCadastroCliente }

procedure TFrmCadastroCliente.BloqueiaEdt;
begin
  inherited;
  self.edtnome.Enabled := false;
  self.edtcnpj_cpf.Enabled := false;
  self.edtinscestadual_rg.Enabled := false;
  self.edtcodcidade.Enabled := false;
  self.edtcidade.Enabled := false;
  self.edtddd.Enabled := false;
  self.edtendereco.Enabled := false;
  self.edtnumero.Enabled := false;
  self.edtbairro.Enabled := false;
  self.edtnasc.Enabled := false;
  self.edtcelular.Enabled := false;
  self.edttelefone.Enabled := false;
  self.edtlimite.Enabled := false;
  self.edtemail.Enabled := false;
  self.edtcodcondicao.Enabled := false;
  self.edtcondicao.Enabled := false;
  self.edtponto_ref.Enabled := false;
end;

procedure TFrmCadastroCliente.btnpesqformapagClick(Sender: TObject);
var
  mbotao: string;
begin
  inherited;
  mbotao := umfrmconsultacondicao.btnSair.Caption;
  umfrmconsultacondicao.btnSair.Caption := 'SELECIONAR';
  umfrmconsultacondicao.ConhecaObj(umcliente.getumacondicao,umactrlcliente.getctrlcondicao);
  umfrmconsultacondicao.ShowModal;

  umfrmconsultacondicao.btnSair.Caption := mbotao;
  self.edtcodcondicao.Text := inttostr(umcliente.getumacondicao.getcodigo);
  self.edtcondicao.Text := umcliente.getumacondicao.getcondicao;
end;

procedure TFrmCadastroCliente.btnPesquisarcidadeClick(Sender: TObject);
var
  mbotao: string;
begin
  inherited;
  mbotao := umfrmconsultacidade.btnSair.Caption;
  umfrmconsultacidade.btnSair.Caption := 'SELECIONAR';
  umfrmconsultacidade.ConhecaObj(umcliente.getumacidade, umactrlcliente.getctrlcidade);
  umfrmconsultacidade.ShowModal;

  umfrmconsultacidade.btnSair.Caption := mbotao;
  self.edtcodcidade.Text := inttostr(umcliente.getumacidade.getcodigo);
  self.edtcidade.Text := umcliente.getumacidade.getcidade;
  self.edtddd.Text := umcliente.getumacidade.getDDD;
end;

procedure TFrmCadastroCliente.CarregaEdt;
begin
  inherited;
  if umcliente.getsexo = 'M' then
  begin
    self.sexo.ItemIndex := 0;
  end
  else
  begin
    self.sexo.ItemIndex := 1;
  end;
  if umcliente.getstatus = 'A' then
  begin
    self.status.ItemIndex := 0;
  end
  else
  begin
    self.status.ItemIndex := 1;
  end;
  if umcliente.getnacionalidade = 'B' then
  begin
    self.nacionalidade.ItemIndex := 0;
  end
  else
  begin
    self.nacionalidade.ItemIndex := 1;
  end;
  if umcliente.gettpcliente = 'F' then
  begin
    self.tpcliente.ItemIndex := 0;
  end
  else
  begin
    self.tpcliente.ItemIndex := 1;
  end;
  self.edtCodigo.Text := inttostr(umcliente.getcodigo);
  self.edtnome.Text := umcliente.getnome;
  self.edtcnpj_cpf.Text := umcliente.getcnpj_cpf;
  self.edtinscestadual_rg.Text := umcliente.getinscest_rg;
  self.edtcodcidade.Text := inttostr(umcliente.getumacidade.getcodigo);
  self.edtcidade.Text := umcliente.getumacidade.getcidade;
  self.edtddd.Text := umcliente.getumacidade.getDDD;
  self.edtendereco.Text := umcliente.getendereco;
  self.edtnumero.Text := umcliente.getnumero;
  self.edtbairro.Text := umcliente.getbairro;
  self.edtnasc.Date := umcliente.getdata_nasc;
  self.edtcelular.Text := umcliente.getcelular;
  self.edttelefone.Text := umcliente.gettelefone;
  self.edtlimite.Text := floattostr(umcliente.getlimite);
  self.edtemail.Text := umcliente.getemail;
  self.edtponto_ref.Text := umcliente.getponto_ref;
  self.edtcodcondicao.Text := inttostr(umcliente.getumacondicao.getcodigo);
  self.edtcondicao.Text := umcliente.getumacondicao.getcondicao;
  self.edtCadastro.Text := DateToStr(umcliente.getCadastro);
  self.edtUlt_alt.Text := DateToStr(umcliente.getUlt_Alt);
end;

procedure TFrmCadastroCliente.ConhecaObj(pObj: TObject; pctrl: TObject);
begin
  inherited;
  umcliente := Clientes(pObj);
  umactrlcliente := ControllerClientes(pctrl);
  self.edtCodigo.Text := inttostr(self.umcliente.getcodigo);
  self.edtlimite.Text := floattostr(self.umcliente.getlimite);
  self.edtCadastro.Text := DateToStr(self.umcliente.getCadastro);
  self.edtUlt_alt.Text := DateToStr(self.umcliente.getUlt_Alt);
end;

procedure TFrmCadastroCliente.DesbloqueiaEdt;
begin
  inherited;
  self.edtnome.Enabled := true;
  self.edtcnpj_cpf.Enabled := true;
  self.edtinscestadual_rg.Enabled := true;
  self.edtcodcidade.Enabled := true;
  self.edtcidade.Enabled := true;
  self.edtddd.Enabled := true;
  self.edtendereco.Enabled := true;
  self.edtnumero.Enabled := true;
  self.edtbairro.Enabled := true;
  self.edtnasc.Enabled := true;
  self.edtcelular.Enabled := true;
  self.edttelefone.Enabled := true;
  self.edtlimite.Enabled := true;
  self.edtemail.Enabled := true;
  self.edtcodcondicao.Enabled := true;
  self.edtcondicao.Enabled := true;
  self.edtponto_ref.Enabled := true;
end;

procedure TFrmCadastroCliente.edtcelularExit(Sender: TObject);
begin
  inherited;
  if self.edtcelular.Text = '' then
  begin
    self.lblcelular.Visible := false;
    self.lbltelefone.Visible := true;
  end
  else
  begin
    self.lblcelular.Visible := true;
    self.lbltelefone.Visible := false;
  end;
end;

procedure TFrmCadastroCliente.edtcnpj_cpfChange(Sender: TObject);
var mcontinua : boolean;
begin
  inherited;
  if self.edtcnpj_cpf.Text <> '' then
  begin
    if self.lbltipo.Caption = 'CPF' then
    begin
      umcliente.setcnpj_cpf(self.edtcnpj_cpf.Text);
    end
    else if self.lbltipo.Caption = 'CNPJ' then
    begin
      umcliente.setcnpj_cpf(self.edtcnpj_cpf.Text);
    end
    else
    begin
      umcliente.setcnpj_cpf(self.edtcnpj_cpf.Text);
    end;
    mcontinua := umactrlcliente.valida_cliente(umcliente);
    if mcontinua then
    begin

    end
    else
    begin
      if self.lbltipo.Caption = 'CPF' then
      begin
        showmessage('CPF JÁ CADASTRADO NO BANCO DE DADOS');
        self.edtcnpj_cpf.Clear;
        self.edtcnpj_cpf.SetFocus;
      end
      else if lbltipo.Caption = 'CNPJ' then
      begin
        showmessage('CNPJ JÁ CADASTRADO NO BANCO DE DADOS');
        self.edtcnpj_cpf.Clear;
        self.edtcnpj_cpf.SetFocus;
      end
      else
      begin
        showmessage('DOCUMENTO JÁ CADASTRADO NO BANCO DE DADOS');
        self.edtcnpj_cpf.Clear;
        self.edtcnpj_cpf.SetFocus;
      end;
    end;
  end
  else
  begin

  end;
end;

procedure TFrmCadastroCliente.edtcnpj_cpfExit(Sender: TObject);
var mcontinua : boolean;
begin
  inherited;
  if self.edtcnpj_cpf.Text <> '' then
  begin
    if self.lbltipo.Caption = 'CPF' then
    begin
      self.validacpf(self.edtcnpj_cpf.Text);
    end
    else if self.lbltipo.Caption = 'CNPJ' then
    begin
      self.ValidaCNPJ(self.edtcnpj_cpf.Text);
    end
    else
    begin

    end;
  end
  else
  begin

  end;
end;

procedure TFrmCadastroCliente.edtcodcidadeExit(Sender: TObject);
var
  mMSG: string;
begin
  inherited;
  if self.edtcodcidade.Text = '' then
  begin
    self.edtcodcidade.Text := '';
    self.edtcidade.Text := '';
    self.edtddd.Text := '';
  end
  else
  begin
    mMSG := umactrlcliente.getctrlcidade.Pesquisar(self.edtcodcidade.Text);
    umactrlcliente.getctrlcidade.Carregar(umcliente.getumacidade);
    self.edtcodcidade.Text := inttostr(umcliente.getumacidade.getcodigo);
    self.edtcidade.Text := umcliente.getumacidade.getcidade;
    self.edtddd.Text := umcliente.getumacidade.getDDD;
    if self.edtcodcidade.Text = inttostr(0) then
    begin
      ShowMessage('Cidade não encontrada');
      self.edtcodcidade.SetFocus;
    end;
  end;
end;

procedure TFrmCadastroCliente.edtcodcondicaoExit(Sender: TObject);
var
  mMSG: string;
begin
  inherited;
  if self.edtcodcondicao.Text = '' then
  begin
    self.edtcodcondicao.Text := '';
    self.edtcondicao.Text := '';
  end
  else
  begin
    mMSG := umactrlcliente.getctrlcondicao.Pesquisar(self.edtcodcondicao.Text);
    umactrlcliente.getctrlcondicao.Carregar(umcliente.getumacondicao);
    self.edtcodcondicao.Text := inttostr(umcliente.getumacondicao.getCodigo);
    self.edtcondicao.Text := umcliente.getumacondicao.getcondicao;
    if self.edtcodcondicao.Text = inttostr(0) then
    begin
      ShowMessage('Condição não Encontrada!');
      self.edtcodcondicao.SetFocus;
    end;
  end;
end;

procedure TFrmCadastroCliente.edtnascExit(Sender: TObject);
begin
  inherited;
  if self.edtnasc.Date > Date then
  begin
    showmessage('A data selecionada não pode ser maior que hoje');
  end
  else
  begin

  end;
  self.edtnasc.Date := now;
end;

procedure TFrmCadastroCliente.edttelefoneExit(Sender: TObject);
begin
  inherited;
  if (self.edtcelular.Text = '') AND (self.edttelefone.Text = '') then
  begin
    showmessage('É NECESSÁRIO PREENCHER UM CELULAR OU TELEFONE!!!');
    self.edtcelular.SetFocus;
  end
  else
  begin

  end;
end;

procedure TFrmCadastroCliente.FormActivate(Sender: TObject);
begin
  inherited;
  self.edtnome.SetFocus;
end;

procedure TFrmCadastroCliente.FormCreate(Sender: TObject);
begin
  inherited;
  self.status.ItemIndex := 0;
  self.nacionalidade.ItemIndex := 0;
  self.tpcliente.ItemIndex := 0;
  self.sexo.ItemIndex := 0;
  self.edtCodigo.Enabled := false;
end;

procedure TFrmCadastroCliente.LimpaEdt;
begin
  inherited;
  self.edtnome.Clear;
  self.edtcnpj_cpf.Clear;
  self.edtinscestadual_rg.Clear;
  self.edtcodcidade.Clear;
  self.edtcidade.Clear;
  self.edtddd.Clear;
  self.edtendereco.Clear;
  self.edtnumero.Clear;
  self.edtbairro.Clear;
  self.edtcelular.Clear;
  self.edttelefone.Clear;
  self.edtlimite.Clear;
  self.edtemail.Clear;
  self.edtcodcondicao.Clear;
  self.edtcondicao.Clear;
  self.edtponto_ref.Clear;
end;

procedure TFrmCadastroCliente.tpclienteClick(Sender: TObject);
begin
  inherited;
  if tpcliente.ItemIndex = 0 then
  begin
    lbltipo.Caption := 'CPF';
    lblinscestadual.Caption := 'RG';
    lblcpf.Visible := true;
    lblcnpj.Visible := false;
    nacionalidade.Enabled := true;
  end
  else
  begin
    lbltipo.Caption := 'CNPJ';
    lblinscestadual.Caption := 'INSC. ESTADUAL';
    lblcpf.Visible := false;
    lblcnpj.Visible := true;
    nacionalidade.ItemIndex := 0;
    nacionalidade.Enabled := false;
  end;
  if self.edtcnpj_cpf.Text <> '' then
  begin
    self.edtcnpj_cpf.Text := ''
  end
  else

  end;

function TFrmCadastroCliente.ValidaCNPJ(num: string): boolean;
var
n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12: integer;
d1,d2: integer;
digitado, calculado: string;
begin
  if (Length(num)<>14) then
    begin
      Result:=False;
    end
  else
    begin
      n1:=StrToInt(num[1]);
      n2:=StrToInt(num[2]);
      n3:=StrToInt(num[3]);
      n4:=StrToInt(num[4]);
      n5:=StrToInt(num[5]);
      n6:=StrToInt(num[6]);
      n7:=StrToInt(num[7]);
      n8:=StrToInt(num[8]);
      n9:=StrToInt(num[9]);
      n10:=StrToInt(num[10]);
      n11:=StrToInt(num[11]);
      n12:=StrToInt(num[12]);
      d1:=n12*2+n11*3+n10*4+n9*5+n8*6+n7*7+n6*8+n5*9+n4*2+n3*3+n2*4+n1*5;
      d1:=11-(d1 mod 11);
      if d1>=10 then d1:=0;
      d2:=d1*2+n12*3+n11*4+n10*5+n9*6+n8*7+n7*8+n6*9+n5*2+n4*3+n3*4+n2*5+n1*6;
      d2:=11-(d2 mod 11);
      if d2>=10 then d2:=0;
      calculado:=inttostr(d1)+inttostr(d2);
      digitado:=num[13]+num[14];
      if calculado=digitado then
        Result:=true
        else
        Result:=false;
    end;
    if result  then
    begin

    end
    else
    begin
      showmessage('CNPJ INVÁLIDO');
      self.edtcnpj_cpf.SetFocus;
      exit;
    end;
end;

function TFrmCadastroCliente.validacpf(num: string): boolean;
var
n1,n2,n3,n4,n5,n6,n7,n8,n9: integer;
d1,d2: integer;
digitado, calculado: string;
begin
  num := self.edtcnpj_cpf.Text;
if (Length(num)<>11) then
    begin
      Result:=False;
    end
  else
    begin
      n1:=StrToInt(num[1]);
      n2:=StrToInt(num[2]);
      n3:=StrToInt(num[3]);
      n4:=StrToInt(num[4]);
      n5:=StrToInt(num[5]);
      n6:=StrToInt(num[6]);
      n7:=StrToInt(num[7]);
      n8:=StrToInt(num[8]);
      n9:=StrToInt(num[9]);
      d1:=n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;
      d1:=11-(d1 mod 11);
      if d1>=10 then d1:=0;
      d2:=d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;
      d2:=11-(d2 mod 11);
      if d2>=10 then d2:=0;
      calculado:=inttostr(d1)+inttostr(d2);
      digitado:=num[10]+num[11];
      if calculado=digitado then
        Result :=true
        else
        Result :=false;
    end;
    if result  then
    begin

    end
    else
    begin
      showmessage('CPF INVÁLIDO');
      self.edtcnpj_cpf.SetFocus;
      exit;
    end;
end;

procedure TFrmCadastroCliente.nacionalidadeClick(Sender: TObject);
begin
  inherited;
  if nacionalidade.ItemIndex = 0 then
  begin
    lbltipo.Caption := 'CPF';
    edtinscestadual_rg.Enabled := true;
    lblinscestadual.Caption := 'RG';
    tpcliente.Enabled := true;
    lblcpf.Visible := true;
    lblcnpj.Visible := false;
    lbldocumento.Visible := false;
    self.edtcnpj_cpf.Clear;
  end
  else
  begin
    lbltipo.Caption := 'DOCUMENTO';
    edtinscestadual_rg.Enabled := false;
    self.edtinscestadual_rg.Clear;
    tpcliente.ItemIndex := 0;
    tpcliente.Enabled := false;
    lblcnpj.Visible := false;
    lblcpf.Visible := false;
    lbldocumento.Visible := true;
    self.edtcnpj_cpf.Clear;
  end;
end;

procedure TFrmCadastroCliente.Sair;
begin
  inherited;
  self.tpcliente.Enabled := true;
end;

procedure TFrmCadastroCliente.Salvar;
begin
  inherited;
  if self.btnSalvar.Caption = '&Excluir' then
  begin
    If Application.MessageBox('Confirma Exclusão ?', 'Cuidado !!!',
      MB_YESNO + MB_ICONQUESTION + MB_DEFBUTTON2) = IDYES Then
    begin
      self.umactrlcliente.Excluir(umcliente);
      ShowMessage('Excluido com Sucesso!!!');
      self.Sair;
    end;
  end
  else
  begin
    if self.status.ItemIndex < 0 then
    begin
      ShowMessage('Campo Status precisa ser selecionado!!!');
      self.status.SetFocus;
    end
    else if (self.edtnome.Text = '') then
    begin
      ShowMessage('Campo Nome precisa ser preenchido!!!');
      self.edtnome.SetFocus;
    end
    else if (self.edtcnpj_cpf.Text = '') then
    begin
      ShowMessage('Campo CPF/CNPJ precisa ser preenchido!!!');
      self.edtcnpj_cpf.SetFocus
    end
    else if (self.edtcodcidade.Text = '') then
    begin
      ShowMessage('Campo Codigo Cidade precisa ser preenchido!!!');
      self.edtcodcidade.SetFocus;
    end
    else if (self.edtcodcondicao.Text = '') then
    begin
      ShowMessage('Campo Codigo Condição precisa ser preenchido!!!');
      self.edtcodcondicao.SetFocus;
    end
    else if (self.edtcelular.Text = '') AND (self.edttelefone.Text = '') then
    begin
      ShowMessage('Campo Celular ou Telefone precisa ser preenchido!!!');
      self.edtcelular.SetFocus;
    end
    else
    begin
      umcliente.setcodigo(strtoint(self.edtCodigo.Text));
      umcliente.setnome(self.edtnome.Text);
      umcliente.setdata_nasc(self.edtnasc.Date);
      umcliente.setcnpj_cpf(self.edtcnpj_cpf.Text);
      umcliente.setinscest_rg(self.edtinscestadual_rg.Text);
      umcliente.setemail(self.edtemail.Text);
      umcliente.setlimite(strtofloat(self.edtlimite.Text));
      umcliente.setponto_ref(self.edtponto_ref.Text);
      umcliente.getumacondicao.setcodigo(strtoint(self.edtcodcondicao.Text));
      umcliente.setendereco(self.edtendereco.Text);
      umcliente.setnumero(self.edtnumero.Text);
      umcliente.setbairro(self.edtbairro.Text);
      umcliente.getumacidade.setcodigo(strtoint(self.edtcodcidade.Text));
      umcliente.setcelular(self.edtcelular.Text);
      umcliente.settelefone(self.edttelefone.Text);
      if self.sexo.ItemIndex = 0 then
      begin
        umcliente.setsexo('M');
      end
      else
      begin
        umcliente.setsexo('F');
      end;
      if self.status.ItemIndex = 0 then
      begin
        umcliente.setstatus('A');
      end
      else
      begin
        umcliente.setstatus('I');
      end;
      if self.tpcliente.ItemIndex = 0 then
      begin
        umcliente.settpcliente('F');
      end
      else
      begin
        umcliente.settpcliente('J');
      end;
      if self.nacionalidade.ItemIndex = 0 then
      begin
        umcliente.setnacionalidade('B');
      end
      else
      begin
        umcliente.setnacionalidade('E');
      end;
      umcliente.setemail(self.edtemail.Text);
      umcliente.setCadastro(StrToDate(self.edtCadastro.Text));
      umcliente.setUlt_Alt(StrToDate(self.edtUlt_alt.Text));
      umactrlcliente.Salvar(umcliente.clone);
      self.tpcliente.Enabled := true;
      ShowMessage('Salvo com Sucesso!!!');
      self.Sair;
    end;
  end;

end;

procedure TFrmCadastroCliente.SetFrmConsulta(pObj: TObject);
begin
  umfrmconsultacidade := TFrmConsultaCidade(pObj);
end;

procedure TFrmCadastroCliente.SetFrmConsultapagamento(pObj: TObject);
begin
  umfrmconsultacondicao := TFrmConsultaCondicao (pObj);
end;

end.
