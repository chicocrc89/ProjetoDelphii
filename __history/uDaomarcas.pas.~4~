unit uDaomarcas;

interface
  uses udao, uDM, DB, umarcas, SysUtils;
  type Daomarcas = class(dao)
  private

  protected
    umdm : TDM;
  public
    constructor CrieObj;
    destructor  Destrua_se;
    function Salvar ( pObj :  TObject ):         string;    override;
    function Carregar ( pObj : TObject ):        string;    override;
    function Excluir ( pObj : TObject ):         string;    override;
    function Pesquisar ( pChave : string):       string;    override;
    procedure setDM (pDM : TDM);
    function getds : Tdatasource;
  end;

implementation

{ Daomarcas }

function Daomarcas.Carregar(pObj: TObject): string;
var mmarcas : marcas;
begin
  mmarcas := marcas (pObj);
  if not umDM.trans.Active then
      umDM.trans.Active := true;
   if not umDM.dsetpais.Active then
      umDM.dsetpais.Open;
   mmarcas.setCodigo(umdm.dsetmarcaID_MARCA.Value);
   mmarcas.setmarca(umdm.dsetmarcaMARCA.Value);
end;

constructor Daomarcas.CrieObj;
begin

end;

destructor Daomarcas.Destrua_se;
begin

end;

function Daomarcas.Excluir(pObj: TObject): string;
begin
  if not umDM.trans.Active then
      umDM.trans.Active := true;
   if not umDM.DSetmarca.Active then
      umDM.DSetmarca.Open;
   umDM.DSetmarca.Delete;
   umDM.trans.Commit;
end;

function Daomarcas.getds: Tdatasource;
begin
  result := umdm.dsmarca;
end;

function Daomarcas.Pesquisar(pChave: string): string;
var mSQL : string;
begin
  if length(pchave) = 0 then
    mSQL := 'select * from marca order by marca'
  else if ehnumero(pchave) then
    mSql:='select * from marca where id_marca =' + QuotedStr(pchave)
  else
    mSql:='select * from marca where marca =' + QuotedStr(pchave);
    umDM.DSetmarca.Active := false;
    umDM.DSetmarca.SelectSQL.Text := mSQL;
    if not umDM.trans.Active then
      umDM.trans.Active := true;
    if not umDM.DSetmarca.Active then
      umDM.DSetmarca.Open;
    result := '';
end;

function Daomarcas.Salvar(pObj: TObject): string;
var mmarcas : marcas;
begin
   mmarcas := marcas (pobj);
   if not umDM.trans.Active then
      umDM.trans.Active := true;
   if not umDM.DSetmarca.Active then
      umDM.DSetmarca.Open;
   if mmarcas.getcodigo = 0 then
      umDM.DSetmarca.Insert
   else
      umDM.DSetmarca.Edit;
      umdm.dsetmarcaID_MARCA.Value := mmarcas.getcodigo;
      umdm.dsetmarcaMARCA.Value := mmarcas.getmarca;
      umDM.DSetmarca.Post;
      umDM.trans.Commit;
end;

procedure Daomarcas.setDM(pDM: TDM);
begin
  umdm := pDM;
end;

end.
