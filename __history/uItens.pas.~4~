unit uItens;

interface
  uses uProdutos;

  type Itens = Class(produtos)

  private

  protected
    qtd:Integer;
    subtotal: Currency;
    desconto: Currency;
    outrasdespesas: Currency;
    frete: Currency;
    custoTotal: Currency;
  public
    constructor Crieobj;override;
    destructor Destrua_se;override;
    procedure SetQtde(pQtd: Integer);
    function  getQtde :Integer;
    procedure setSubtotal(pSubtotal:Currency);
    function  getSubtotal: Currency;
    procedure setDesconto(pDesconto:Currency);
    function  getDesconto: Currency;
    procedure setOutrasdespesas(pOutrasDespesas:Currency);
    function  getOutrasDespesas :Currency;
    procedure setFrete(pfrete:Currency);
    function  getfrete: Currency;
    procedure setCustoTotal (pcustotal:Currency);
    function getCustoTotal: Currency;
End;

implementation

{ Itens }

constructor Itens.Crieobj;
begin
  inherited;

end;

destructor Itens.Destrua_se;
begin

  inherited;
end;

function Itens.getCustoTotal: Currency;
begin
  result := custototal;
end;

function Itens.getDesconto: Currency;
begin
  result := desconto;
end;

function Itens.getfrete: Currency;
begin
  result := frete;
end;

function Itens.getOutrasDespesas: Currency;
begin
  result := outrasdespesas;
end;

function Itens.getQtde: Integer;
begin

end;

function Itens.getSubtotal: Currency;
begin

end;

procedure Itens.setCustoTotal(pcustotal: Currency);
begin

end;

procedure Itens.setDesconto(pDesconto: Currency);
begin

end;

procedure Itens.setFrete(pfrete: Currency);
begin

end;

procedure Itens.setOutrasdespesas(pOutrasDespesas: Currency);
begin

end;

procedure Itens.SetQtde(pQtde: Integer);
begin

end;

procedure Itens.setSubtotal(pSubtotal: Currency);
begin

end;

end.
