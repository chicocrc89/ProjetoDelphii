unit uDaoUsuarios;

interface

uses udao, uusuarios, uDM, DB, uDaoEstados, SysUtils;

type
  Daousuarios = class(dao)
  private

  protected
    umdm: TDM;
    umadaoestado: DaoEstados;
  public
    constructor CrieObj;
    destructor Destrua_se;
    function Salvar(pObj: TObject): string; override;
    function Carregar(pObj: TObject): string; override;
    function Excluir(pObj: TObject): string; override;
    function Pesquisar(pChave: string): string; override;
    procedure setDM(pDM: TDM);
    function getds: Tdatasource;
    procedure setdaoestado(pObj: TObject);
  end;

implementation

{ Daousuarios }

function Daousuarios.Carregar(pObj: TObject): string;
var
  musuarios: usuarios;
begin
  musuarios := usuarios(pObj);
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetcidade.Active then
    umdm.dsetcidade.Open;
  musuarios.setCodigo(umdm.dsetcidadeID_CIDADE.Value);
  musuarios.setcidade(umdm.dsetcidadeCIDADE.Value);
  musuarios.setDDD(umdm.dsetcidadeDDD.Value);
  musuarios.getumestado.setCodigo(umdm.dsetcidadeID_ESTADO.Value);
  musuarios.setCadastro(umdm.dsetcidadeDATA_CADASTRO.Value);
  musuarios.setUlt_Alt(umdm.dsetcidadeULTIMA_ALTERACAO.Value);
end;

constructor Daousuarios.CrieObj;
begin
  umadaoestado := DaoEstados.CrieObj;
end;

destructor Daousuarios.Destrua_se;
begin
  umadaoestado.Destrua_se;
end;

function Daousuarios.Excluir(pObj: TObject): string;
begin
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetcidade.Active then
    umdm.dsetcidade.Open;
  umdm.dsetcidade.Delete;
  umdm.trans.Commit;
end;

function Daousuarios.getds: Tdatasource;
begin
  result := umdm.dscidade;
end;

function Daousuarios.Pesquisar(pChave: string): string;
var
  mSQL: string;
begin
  if length(pChave) = 0 then
    mSQL := 'select * from cidade order by cidade'
  else if ehnumero(pChave) then
    mSQL := 'select * from cidade where id_cidade =' + QuotedStr(pChave)
  else
    mSQL := 'select * from cidade where cidade =' + QuotedStr(pChave);
  umdm.dsetcidade.Active := false;
  umdm.dsetcidade.SelectSQL.Text := mSQL;
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetcidade.Active then
    umdm.dsetcidade.Open;
  result := '';
end;

function Daousuarios.Salvar(pObj: TObject): string;
var
  musuarios: usuarios;
begin
  musuarios := usuarios(pObj);
  if not umdm.trans.Active then
    umdm.trans.Active := true;
  if not umdm.dsetcidade.Active then
    umdm.dsetcidade.Open;
  if musuarios.getcodigo = 0 then
    umdm.dsetcidade.Insert
  else
    umdm.dsetcidade.Edit;
  umdm.dsetcidadeID_CIDADE.Value := musuarios.getcodigo;
  umdm.dsetcidadeCIDADE.Value := musuarios.getcidade;
  umdm.dsetcidadeDDD.Value := musuarios.getDDD;
  umdm.dsetcidadeID_ESTADO.Value := musuarios.getumestado.getcodigo;
  umdm.dsetcidadeDATA_CADASTRO.Value := musuarios.getCadastro;
  umdm.dsetcidadeULTIMA_ALTERACAO.Value := musuarios.getUlt_Alt;
  umdm.dsetcidade.Post;
  umdm.trans.Commit;

end;

procedure Daousuarios.setdaoestado(pObj: TObject);
begin
  umadaoestado := DaoEstados(pObj);
end;

procedure Daousuarios.setDM(pDM: TDM);
begin
  umdm := pDM;
end;

end.
