unit uControllerVeiculos;

interface
  uses sysutils, ucontroller, uDM, DB, uVeiculos, uDaoVeiculos, uControllerModelos;
  type ControllerVeiculos = class(controller)
  private

  protected
    umadaoveiculo : DaoVeiculos;
    umactrlmodelo : ControllerModelos;
  public
    constructor CrieObj;
    destructor  Destrua_se;
    function Salvar ( pObj :  TObject ):            string;    override;
    function Carregar ( pObj : TObject ):           string;    override;
    function Excluir ( pObj : TObject ):            string;    override;
    function Pesquisar ( pChave : string):          string;    override;
    procedure setDM (pDM : TDM);
    function getds : Tdatasource;
    procedure setctrlmodelo (pObj : TObject);
    function getctrlmodelo : ControllerModelos;
  end;

implementation

{ Controllerlaboratorios }

function ControllerVeiculos.Carregar(pObj: TObject): string;
var mveiculo : Veiculos;
begin
  self.umadaoveiculo.Carregar(pObj);
  mveiculo := veiculos (pobj);
  umaCtrlModelo.pesquisar(inttostr(mveiculo.getummodelo.getcodigo));
  self.umactrlmodelo.Carregar(mveiculo.getummodelo);
end;

constructor ControllerVeiculos.CrieObj;
begin
  self.umadaoveiculo := DaoVeiculos.CrieObj;
end;

destructor ControllerVeiculos.Destrua_se;
begin
  self.umadaoveiculo.Destrua_se;
end;

function ControllerVeiculos.Excluir(pObj: TObject): string;
begin
  self.umadaoveiculo.Excluir(pObj);
end;

function ControllerVeiculos.getctrlmodelo: ControllerModelos;
begin
  result := umactrlmodelo;
end;

function ControllerVeiculos.getds: Tdatasource;
begin
  result := umadaoveiculo.getds;
end;

function ControllerVeiculos.Pesquisar(pChave: string): string;
begin
  self.umadaoveiculo.Pesquisar(pChave);
end;

function ControllerVeiculos.Salvar(pObj: TObject): string;
begin
  self.umadaoveiculo.Salvar(pObj);
end;

procedure ControllerVeiculos.setctrlmodelo(pObj: TObject);
begin
  umactrlmodelo := ControllerModelos (pObj);
end;

procedure ControllerVeiculos.setDM(pDM: TDM);
begin
  self.umadaoveiculo.setDM(pDM);
end;

end.
